name: Build Windows
on:
  workflow_dispatch:
  workflow_call:

env:
  OpenCL_ROOT: "${{ github.workspace }}/OpenCL-SDK"
  OpenCL_INCLUDE_DIR: "${{ github.workspace }}/OpenCL-SDK/build/install/include"
  OpenCL_LIBRARY: "${{ github.workspace }}/OpenCL-SDK/install/lib/OpenCL.lib"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - precision: single
            arch: x86_32
            opencl_arch: Win32
          - precision: single
            arch: x86_64
            opencl_arch: x64
          - precision: double
            arch: x86_32
            opencl_arch: Win32
          - precision: double
            arch: x86_64
            opencl_arch: x64
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/OpenCL-SDK
          branch: v2023.12.14
          repository: KhronosGroup/OpenCL-SDK
          submodules: true
          fetch-depth: 0

      - name: Check OpenCL Cache
        id: opencl_cache
        uses: actions/cache@v3
        with:
          path: |
            OpenCL-SDK
          key: __${{ runner.os }}_${{ matrix.arch }}-opencl-v2021.06.30__${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            __${{runner.os }}-opencl__

      - name: Build OpenCL
        run: |
          cmake -G "Visual Studio 17 2022" -S OpenCL-SDK -B ${{ github.workspace }}/OpenCL-SDK/build -DOPENCL_SDK_BUILD_SAMPLES=OFF -DOPENCL_ICD_LOADER_BUILD=ON -DOPENCL_SDK_BUILD_OPENGL_SAMPLES=OFF -D BUILD_TESTING=OFF -D BUILD_DOCS=OFF -D BUILD_EXAMPLES=OFF -D BUILD_TESTS=OFF -D OPENCL_SDK_TEST_SAMPLES=OFF -A ${{matrix.opencl_arch}}
          cmake --build ${{ github.workspace }}/OpenCL-SDK/build --target install

      - name: ðŸ”— GDExtension Build
        uses: ughuuu/godot-cpp-template/.github/actions/build@add-more-stuff/options-to-build
        with:
          platform: windows
          arch: ${{ matrix.arch }}
          godot-cpp-location: godot-cpp
          float-precision: ${{ matrix.precision }}
          build-target-type: template_release

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Godot_Whisper
          path: |
            ${{ github.workspace }}/bin/**/*.dll
            ${{ github.workspace }}/samples/**
          if-no-files-found: error
          compression-level: 9
